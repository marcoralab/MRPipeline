str_extract(out$p1, patern = ".*/\\s*|_.*")
str_extract(out$p1, pattern = ".*/\\s*|_.*")
str_extract(out$p1, pattern = pearl(".*/\\s*|_.*"))
out %>% #
	as.tibble() %>% #
	mutate(p1 = gsub(".*/\\s*|_.*", "", p1))
mutate(p2 = gsub(".*/\\s*|_.*", "", p2))
out <- out %>% #
	as.tibble() %>% #
	mutate(p1 = gsub(".*/\\s*|_.*", "", p1)) %>% #
	mutate(p2 = gsub(".*/\\s*|_.*", "", p2))
out
bind_rows()
summary_stats <- list.files('~/Dropbox/Research/PostDoc-MSSM/2_MR/2_DerivedData/LDSC', recursive = T, pattern = '.tsv', #
           full.names = T) %>% #
  map(., read_tsv) %>% #
  bind_rows()
summary_stats
1/75
1/0.75
1/0.9
1/0.92
1/0.73
dat <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/2_MR/1_RawData/GWAS/audit_GWAS.Processed.g')
dat <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/2_MR/1_RawData/GWAS/audit_GWAS.Processed.gz')
/sc/orga/projects/LOAD/shea/Projects/2_MR/1_RawData/GWAS/audit_GWAS.Processed.gz
dat <- read_tsv('~/Dropbox/Research/PostDoc-MSSM/2_MR/1_RawData/GWAS/audit_GWAS.Processed.gz')
dat
filter(dat, str_detect(SNP, 'rs'))
1/0.482
50000 - 39462
10538 - 4000
6538 - 3000
6538 - 4000
39462 + 4000
50000 - (39462 + 4000)
39462 + 4000 + 3000 + 2538
39462 + 4000 + 4000 + 2538
30830 + 8632 + 2538 + 4000 + 4000
30830*.29
30830 + 8941 + 4000 + 4000
50000 - 47771
30830
30830 / 2
15415  *0.29
15415 + 4470.35
15415 + 4470.35 + 2500 + 3000 + 2000
61,660
12/8
8/12
61660 * 0.66
(61660 * 0.66) / 2
20347.8 * 0.29
20347 + 5900
20347 + 5900 + 2500 + 3000 + 2000
1/12
61660 * (1/12)
61660 * (6/12)
(61660 * (6/12)) + ()(61660 * (6/12))/0.29)
(61660 * (6/12)) + ((61660 * (6/12))/0.29)
((61660 * (6/12))/0.29)
((61660 * (6/12))*0.29)
(61660 * (6/12)) + ((61660 * (6/12))*0.29)
(61660 * (8/12)) + ((61660 * (8/12))*0.29)
dat <- read_table2('~/Dropbox/Research/PostDoc-MSSM/2_MR/1_RawData/GWAS/ggt_GWAS.Processed.gz')
library(tidyverse)
dat <- read_table2('~/Dropbox/Research/PostDoc-MSSM/2_MR/1_RawData/GWAS/ggt_GWAS.Processed.gz')
dat
dat2 <- select(SNP, CHR, POS, Effect_allele, Non_Effect_allele, EAF, Beta, SE, P, N)
dat2 <- select(dat, SNP, CHR, POS, Effect_allele, Non_Effect_allele, EAF, Beta, SE, P, N)
dat2
dat2 <- dat %>% select(SNP, CHR, POS, Effect_allele, Non_Effect_allele, Beta, SE, P, N) %>% rename(snp = SNP, chr = CHR, position = POS, effect_allele = Effect_allele, other_allele = Non_Effect_allele, b = Beta, se = SE, p = P, n = N)
dat2
dat2 <- dat %>% select(SNP, CHR, POS, Effect_allele, Non_Effect_allele, Beta, SE, P, N) %>% rename(snp = SNP, chr = CHR, position = POS, effect_allele = Effect_allele, other_allele = Non_Effect_allele, b = Beta, se = SE, p = P, n = N) %>% write_tsv('~/Documents/ggt_GWAS.Processed')
tail(dat2)
dat2 <- dat %>% select(SNP, CHR, POS, Effect_allele, Non_Effect_allele, Beta, SE, P, N) %>% rename(snp = SNP, chr = CHR, position = POS, effect_allele = Effect_allele, other_allele = Non_Effect_allele, b = Beta, se = SE, p = P, n = N) %>% filter(!is.na(chr)) %>% write_tsv('~/Documents/ggt_GWAS.Processed')
tail(dat2)
dat
dat2
dat2 %>% filter(snp == 'rs34155012')
dat2 <- dat %>% select(SNP, CHR, POS, Effect_allele, Non_Effect_allele, Beta, SE, P, N) %>% rename(snp = SNP, chr = CHR, position = POS, effect_allele = Effect_allele, other_allele = Non_Effect_allele, b = Beta, se = SE, p = P, n = N) %>% filter(!is.na(chr)) %>% filter(!is.na(position)) %>% write_tsv('~/Documents/ggt_GWAS.Processed')
dat2 %>% filter(snp == 'rs34155012')
dat <- read_table2('~/Programs/ssimp_software/output.txt')
dat
filter(dat, source == 'GWAS')
dat <- read_table2('~/Programs/ssimp_software/output.txt')
filter(dat, source == 'GWAS')
dat
filter(dat, r2.pred > 0.3)
filter(dat, r2.pred > 0.8)
dat <- read_table2('~/LOAD_minerva/dummy/shea/bin/ssimp_software-master/output/ggt_ssimp_1:6477267-1:8189834.txt')
dat
dat <- read_tsv('~/LOAD_minerva/dummy/shea/bin/ssimp_software-master/output/ggt_ssimp_1:6477267-1:8189834.txt')
dat
filter(dat, r2.pred > 0.3)
filter(dat, source == 'GWAS')
(74880/2) + (30830 + 8941)
80441025 - 80439648
dat <- read_tsv('~/Dropbox/Research/PostDoc-MSSM/2_MR/Shiny/MR_Results_summary.txt')#
#
dat %>% #
  filter(outcome %in% c('load', 'aaos')) %>% #
  filter(exposure %in% c('alcc', 'alcd', 'audit'))
filter(method == 'IVW')
dat %>% #
  filter(outcome %in% c('load', 'aaos')) %>% #
  filter(exposure %in% c('alcc', 'alcd', 'audit')) %>% #
  filter(method == 'IVW')
MRPRESSO_results <- list.files('~/Dropbox/Research/PostDoc-MSSM/2_MR/4_Output', recursive = T,
pattern = '_MRPRESSO_Results.csv', #
                            full.names = T) %>% #
  map(., function(x){#
    dat.model <- tibble(file = x) %>% #
      mutate(file = str_replace(file, '/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/2_MR/4_Output/', "")) %>%#
      separate(file, c('exposure', 'outcome', 'file'), sep = '/', remove = F) %>% #
      mutate(file = ifelse(is.na(file), outcome, file)) %>% #
      mutate(outcome = ifelse(grepl('SNPs', outcome), NA, outcome)) %>% #
      separate(file, c('X1', 'pt', 'X2', 'X3'), sep = '_') %>% #
      select(-X1, -X2, -X3)#
    datin <- read_csv(x, col_types = list(nsnp = col_character(), b = col_character(), #
                                          se = col_character(), pval = col_character())) %>% #
      mutate(pt = dat.model$pt)#
  }) %>% #
  bind_rows() %>% #
  filter(!is.na(b)) %>% #
  mutate(nsnp = as.numeric(nsnp), b = as.numeric(b), se = as.numeric(se), pval = as.numeric(pval))
MRPRESSO_results
MRPRESSO_results  %>%
filter(outcome %in% c('ggt', 'ggtSSimp')) %>% #
  filter(exposure %in% c('alcc', 'alcd', 'audit')) %>% #
  filter(method == 'IVW')
MRPRESSO_results %>% distinct(outcome)
MRPRESSO_results %>% distinct(outcome) %>% print(n = Inf)
MRPRESSO_results  %>% #
  filter(outcome %in% c('ggt', 'ggtSSimp')) %>% #
  filter(exposure %in% c('alcc', 'alcd', 'audit'))
MRPRESSO_results  %>% #
  filter(outcome %in% c('ggt', 'ggtSSimp')) %>% #
  filter(exposure %in% c('alcc', 'alcd', 'audit')) %>% #
  filter(method == 'Inverse variance weighted (fixed effects)')
~/Dropbox/Research/Data/Summary_Statisitics/AD/Jun2016/META_IGAP.7.ADGC.15_MODEL_APOE.e4.Carriers.txt.gz#
~/Dropbox/Research/Data/Summary_Statisitics/AD/Jun2016/META_IGAP.7.ADGC.15_MODEL_APOE.e4.Noncarriers.txt.gz~/Dropbox/Research/Data/Summary_Statisitics/AD/Jun2016/META_IGAP.7.ADGC.15_MODEL_APOE.e4.Carriers.txt.gz#
~/Dropbox/Research/Data/Summary_Statisitics/AD/Jun2016/META_IGAP.7.ADGC.15_MODEL_APOE.e4.Noncarriers.txt.gz
19.2373*4.37
19.2373*0.0437
19.2373*1.0437
10000 * 20.07797
nmt <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/igapLambert_nmt_SNPlist.txt')
library(tidyverse)
nmt <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/igapLambert_nmt_SNPlist.txt')
nmt <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/igapLambert_nmt_SNPlist.txt', colnames = F)
nmt <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/igapLambert_nmt_SNPlist.txt', col_names = F)
nmt
NoMtioNoApoe <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/pgs_NOmitoNOapoe/Lambert/pgs_NOmitoNOapoe', col_names = F)
NoMtioNoApoe <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/igapLambert_NOnmtNOapoe_SNPlist.txt, col_names = F)
'
)
NoMtioNoApoe
NoMtioNoApoe <- read_tsv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/igapLambert_NOnmtNOapoe_SNPlist.txt', col_names = F)
NoMtioNoApoe
# ------ Kunkle 2019 -------- ## #
cmd_pgs_pgs_NOmitoNOapoe_kunkle = paste(#
'cd /Users/sheaandrews/Programs/PRSice_2;',  #
'Rscript PRSice.R --dir .', #
  '--prsice ./PRSice',#
  '--base ~/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/IGAPKunkle_gwas.txt', #
  '--target ~/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/1_RawData/HRC_imputed/all_chrall_filtered', #
  '--pheno-file ~/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/1_RawData/HRC_imputed/adni.pheno', #
  '--pheno-col DX_bl,dx_last', #
  '--extract ~/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/igapKunkle_NOnmtNOapoe_SNPlist.txt', #
  '--beta --A1 A1 --A2 A2 --bp POS --chr CHR --pvalue P --se SE --snp SNP --stat Beta', #
  '--keep-ambig', #
  '--thread 4', #
  '--all-score', #
  '--binary-target T,T', #
  '--print-snp', #
  '--score std', #
  '--out ~/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/PRSice/pgs_NOmitoNOapoe/Kunkle/pgs_NOmitoNOapoe', sep = " ")#
  system(cmd_pgs_pgs_NOmitoNOapoe_kunkle)
exp(0.28)
mito <- read_csv('~/Downloads/Dobler_et_al_Add_Files/Dobler_et_al_EffectSizeData.csv')
mito
count(Trait2, Trait_detailed)
count(mito, Trait2, Trait_detailed)
count(mito, Trait2, Trait_detailed) %>% print(n = Inf)
group_by(mito, human) %>% count(Trait2, Trait_detailed) %>% print(n = Inf)
mitocarta <- read_csv('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/3_mitoWAX/2_DerivedData/MAGMA/MitoCarta2.csv')
mitocarta
library(read_xlxs)
library(read_xlsx)
library(read_xls)
library(readxl)
st4 <- read_xlsx('~/Downloads/41593_2018_154_MOESM4_ESM.xlsx', skip = 2)
st4
st4 %>% filter(`Module ID` %in% c(13, 15, 131))
st4 %>% filter(`Module ID` %in% c(13, 15, 131)) %>% group_by(`Module ID`) %>% n()
st4 %>% filter(`Module ID` %in% c(13, 15, 131)) %>% group_by(`Module ID`) %>% summarize(n = n())
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% group_by(`Module ID`) %>% summarize(n = n())
mitocarta
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Module ID` = 'Symbol'))
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol'))
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol')) %>% group_by(`Module ID`) %>% summarize(n = n(), mito = !is.na(MCARTA2.0_score))
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol')) %>% group_by(`Module ID`) %>% summarize(n = n(), mito = is.na(MCARTA2.0_score))
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol')) %>% group_by(`Module ID`) %>% mutate(mitocarta = ifelese(is.na(MCARTA2.0_score, FALSE, TRUE))
)
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol')) %>% group_by(`Module ID`) %>% mutate(mitocarta = ifelse(is.na(MCARTA2.0_score, FALSE, TRUE)))
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol')) %>% mutate(mitocarta = ifelse(is.na(MCARTA2.0_score, FALSE, TRUE)))  %>% group_by(`Module ID`)
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol')) %>% mutate(mitocarta = ifelse(is.na(MCARTA2.0_score), FALSE, TRUE))  %>% group_by(`Module ID`)
st4 %>% filter(`Module ID` %in% c(13, 14, 131)) %>% left_join(select(mitocarta, Symbol, MCARTA2.0_score), by = c(`Gene Symbol` = 'Symbol')) %>% mutate(mitocarta = ifelse(is.na(MCARTA2.0_score), FALSE, TRUE))  %>% group_by(`Module ID`)  %>% summarize(n = n(), mito = sum(mitocarta))
library(foreign)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)#
head(crimes)#
crimes$onclick <- sprintf("window.open(\"%s%s\")",#
                          "http://en.wikipedia.org/wiki/", as.character(crimes$state) )#
#
gg_crime <- ggplot(crimes, aes(x = Murder, y = Assault, color = UrbanPop )) + #
  geom_point_interactive(#
    aes( data_id = state, tooltip = state, onclick = onclick ), size = 3 ) + #
  scale_colour_gradient(low = "#999999", high = "#FF3333")#
#
girafe(ggobj = gg_crime)
library(ggiraph)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)#
head(crimes)#
crimes$onclick <- sprintf("window.open(\"%s%s\")",#
                          "http://en.wikipedia.org/wiki/", as.character(crimes$state) )#
#
gg_crime <- ggplot(crimes, aes(x = Murder, y = Assault, color = UrbanPop )) + #
  geom_point_interactive(#
    aes( data_id = state, tooltip = state, onclick = onclick ), size = 3 ) + #
  scale_colour_gradient(low = "#999999", high = "#FF3333")#
#
girafe(ggobj = gg_crime)
library(ggiraph)
library(ggplot2)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)#
head(crimes)#
crimes$onclick <- sprintf("window.open(\"%s%s\")",#
                          "http://en.wikipedia.org/wiki/", as.character(crimes$state) )#
#
gg_crime <- ggplot(crimes, aes(x = Murder, y = Assault, color = UrbanPop )) + #
  geom_point_interactive(#
    aes( data_id = state, tooltip = state, onclick = onclick ), size = 3 ) + #
  scale_colour_gradient(low = "#999999", high = "#FF3333")#
#
girafe(ggobj = gg_crime)
MRdat.raw <- read_tsv(file.path('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/2_MR/4_Output/AlcoholStrict/0_Summary', 'MR_mrpresso_MRdat.txt.gz'), guess_max = 100000) %>%
asd
MRdat.raw <- read_tsv(file.path('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/2_MR/4_Output/AlcoholStrict/0_Summary', 'MR_mrpresso_MRdat.txt.gz'), guess_max = 100000) #
#
mrdat <- MRdat.raw  %>% #
  filter(outcome %in% c('aaos')) %>% #
  filter(exposure %in% c('alccliu')) %>% #
  filter(pt == 5e-8)
library(tidyverse)
MRdat.raw <- read_tsv(file.path('/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/2_MR/4_Output/AlcoholStrict/0_Summary', 'MR_mrpresso_MRdat.txt.gz'), guess_max = 100000) #
#
mrdat <- MRdat.raw  %>% #
  filter(outcome %in% c('aaos')) %>% #
  filter(exposure %in% c('alccliu')) %>% #
  filter(pt == 5e-8)
res_single <- mr_singlesnp(mrdat,#
                           single_method = 'mr_wald_ratio',#
                           all_method=c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))#
#
res <- mr(mrdat, method_list = c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))#
#
d <- mrdat %>% select(SNP, outcome, exposure, id.exposure, id.outcome, beta.exposure, se.exposure, beta.outcome, se.outcome, mrpresso_keep) %>% #
  mutate(beta.exposure.flipped = ifelse(beta.exposure < 0, beta.exposure * -1, beta.exposure)) %>% #
  mutate(beta.outcome.flipped = ifelse(beta.exposure < 0, beta.outcome * -1, beta.outcome)) #
#
temp <- d %>% unite(id, id.exposure, id.outcome, sep = '.', remove = F) %>% split(.$id) %>% #
  map(~ with(., mr_egger_regression(beta.exposure.flipped, beta.outcome.flipped, se.exposure, se.outcome, #
                                    default_parameters()))) %>% #
  map(~ .$b_i) %>% #
  bind_rows() %>% #
  t() %>% #
  as_tibble(.name_repair = 'unique', rownames = 'id') %>% #
  separate(id, c('id.exposure', 'id.outcome')) %>% #
  mutate(method = "MR Egger") %>% #
  rename(a = '...1')#
#
mrres <- left_join(res, temp) %>% #
  mutate(a = ifelse(is.na(a), 0, a)) #
d$onclick <- sprintf("window.open(\"%s%s\")", "https://www.ncbi.nlm.nih.gov/snp/", as.character(d$SNP)) #
#
g <- ggplot(data = d, aes(x = beta.exposure.flipped, y = beta.outcome.flipped, colour = mrpresso_keep)) + #
  geom_errorbar(aes(ymin = beta.outcome.flipped - se.outcome, ymax = beta.outcome.flipped + se.outcome), colour = "grey", width = 0) + #
  geom_errorbarh(aes(xmin = beta.exposure.flipped - se.exposure, xmax = beta.exposure.flipped + se.exposure), colour = "grey", height = 0) +#
  geom_point_interactive(aes(tooltip = SNP, onclick = onclick)) +#
  geom_abline(data = mrres, aes(intercept = a, slope = b, colour = method), show.legend = TRUE) + #
  theme_bw() + theme(legend.position = "bottom",  text = element_text(family="Times", size=10)) + #
  labs(colour = "MR Test", x = "SNP effect on exposure", y = "SNP effect on outcome") #
#
girafe(code = print(g) )
library(TwoSampleMR)
/Users/sheaandrews/Dropbox/Research/PostDoc-MSSM/2_MR/4_Output/AlcoholStrict/0_Summary
res_single <- mr_singlesnp(mrdat,#
                           single_method = 'mr_wald_ratio',#
                           all_method=c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))#
#
res <- mr(mrdat, method_list = c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))#
#
d <- mrdat %>% select(SNP, outcome, exposure, id.exposure, id.outcome, beta.exposure, se.exposure, beta.outcome, se.outcome, mrpresso_keep) %>% #
  mutate(beta.exposure.flipped = ifelse(beta.exposure < 0, beta.exposure * -1, beta.exposure)) %>% #
  mutate(beta.outcome.flipped = ifelse(beta.exposure < 0, beta.outcome * -1, beta.outcome)) #
#
temp <- d %>% unite(id, id.exposure, id.outcome, sep = '.', remove = F) %>% split(.$id) %>% #
  map(~ with(., mr_egger_regression(beta.exposure.flipped, beta.outcome.flipped, se.exposure, se.outcome, #
                                    default_parameters()))) %>% #
  map(~ .$b_i) %>% #
  bind_rows() %>% #
  t() %>% #
  as_tibble(.name_repair = 'unique', rownames = 'id') %>% #
  separate(id, c('id.exposure', 'id.outcome')) %>% #
  mutate(method = "MR Egger") %>% #
  rename(a = '...1')#
#
mrres <- left_join(res, temp) %>% #
  mutate(a = ifelse(is.na(a), 0, a)) #
d$onclick <- sprintf("window.open(\"%s%s\")", "https://www.ncbi.nlm.nih.gov/snp/", as.character(d$SNP)) #
#
g <- ggplot(data = d, aes(x = beta.exposure.flipped, y = beta.outcome.flipped, colour = mrpresso_keep)) + #
  geom_errorbar(aes(ymin = beta.outcome.flipped - se.outcome, ymax = beta.outcome.flipped + se.outcome), colour = "grey", width = 0) + #
  geom_errorbarh(aes(xmin = beta.exposure.flipped - se.exposure, xmax = beta.exposure.flipped + se.exposure), colour = "grey", height = 0) +#
  geom_point_interactive(aes(tooltip = SNP, onclick = onclick)) +#
  geom_abline(data = mrres, aes(intercept = a, slope = b, colour = method), show.legend = TRUE) + #
  theme_bw() + theme(legend.position = "bottom",  text = element_text(family="Times", size=10)) + #
  labs(colour = "MR Test", x = "SNP effect on exposure", y = "SNP effect on outcome") #
#
girafe(code = print(g) )
library(ggplot2)#
#
counts <- as.data.frame(table(x = rpois(100,5)))#
counts$x <- as.numeric( as.character(counts$x) )#
counts$xlab <- paste0("bar",as.character(counts$x) )#
#
gg_segment_1 <- ggplot(data = counts, aes(x = x, y = Freq,#
                        yend = 0, xend = x, tooltip = xlab ) ) +#
        geom_segment_interactive( size = I(10))#
#
dataset = data.frame(x=c(1,2,5,6,8),#
                y=c(3,6,2,8,7),#
                vx=c(1,1.5,0.8,0.5,1.3),#
                vy=c(0.2,1.3,1.7,0.8,1.4),#
                labs = paste0("Lab", 1:5))#
dataset$clickjs = paste0("alert(\"",dataset$labs, "\")" )#
#
gg_segment_2 = ggplot() +#
        geom_segment_interactive(data=dataset, mapping=aes(x=x, y=y,#
                        xend=x+vx, yend=y+vy, tooltip = labs, onclick=clickjs ),#
                arrow=grid::arrow(length = grid::unit(0.03, "npc")),#
                size=2, color="blue") +#
        geom_point(data=dataset, mapping=aes(x=x, y=y),#
                size=4, shape=21, fill="white")#
#
ggiraph(code = {print(gg_segment_1)})#
ggiraph(code = {print(gg_segment_2)})
girafe(code = print(g) )
kunkle.raw <- read_tsv('~/LOAD_minerva/dummy/shea/data/sumstats_munger/gwas/Kunkle2019/Kunkle_etal_2019_IGAP_Summary_statistics.with_allelefreqs.txt')
kunkle.raw <- read_table2('~/LOAD_minerva/dummy/shea/data/sumstats_munger/gwas/Kunkle2019/Kunkle_etal_2019_IGAP_Summary_statistics.with_allelefreqs.txt')
kunkle.raw
filter(kunkle.raw, Chromosome == 5)
step1 <- read_tsv('~/LOAD_minerva/dummy/shea/data/sumstats_munger/input/sumstats/Kunkle2019load.chr5.tsv.gz')
step1 <- read_table2('~/LOAD_minerva/dummy/shea/data/sumstats_munger/input/sumstats/Kunkle2019load.chr5.tsv.gz')
step1
step2 <- read_table2('~/LOAD_minerva/dummy/shea/data/sumstats_munger/input/sumstats/Kunkle2019load.chr5.tsv')
step2 <- read_table2('~/LOAD_minerva/dummy/shea/data/sumstats_munger/input/sumstats/Kunkle2019load.chr5.tsv', col_names = F)
step2
step3 <- read_table2('/Users/sheaandrews/LOAD_minerva/dummy/shea/data/sumstats_munger/input/sumstats/Kunkle2019load.chr5.vcf.gz', comment = '##')
step3
step4 <- read_table2('/Users/sheaandrews/LOAD_minerva/dummy/shea/data/sumstats_munger/input/sumstats/Kunkle2019load.chr6.CPRA_b37.vcf.gz', comment = '##')
step4
step4 <- read_table2('/Users/sheaandrews/LOAD_minerva/dummy/shea/data/sumstats_munger/input/sumstats/Kunkle2019load.chr5.CPRA_b37.vcf.gz', comment = '##')
step4
step5 <- read_table2('/Users/sheaandrews/LOAD_minerva/dummy/shea/data/sumstats_munger/output/sumstats/Kunkle2019load.chr5.CPRA_b37.vcf.gz', comment = '##')
step5 <- read_table2('/Users/sheaandrews/LOAD_minerva/dummy/shea/data/sumstats_munger/output/Kunkle2019load.chr5.CPRA_b37.vcf.gz', comment = '##')
step5
exp(1.08)
library(HiMC)
?generate_snp_data
oilfish.raw <- read_table2('~/Dropbox/Research/Data/Summary_Statisitics/FishIntake/1329_gwas_imputed_v3_both_sexes_tsv.gz')
librar
library(tidyverse)
oilfish.raw <- read_table2('~/Dropbox/Research/Data/Summary_Statisitics/FishIntake/1329_gwas_imputed_v3_both_sexes_tsv.gz')
oilfish.raw
dat <- read_tsv('phenotypes.both_sexes.tsv')
dat <- read_tsv('~/Documents/Test/phenotypes.both_sexes.tsv')
dat
filter(dat, phenotype == 1329)
filter(dat, phenotype == '2247_0')
library(tidyverse)
seperate(2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv)
? seperate
separate(2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv)
as_tibble(file = 2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv) %>% #
	separate()
as_tibble(file = 2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv) %>% #
	separate(file)
as_tibble(file = 2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv)
as_tibble(file = '2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv') %>% #
	separate(file)
as_tibble(file = '2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv')
tibble(file = '2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv') %>%
separate(file)
tibble(file = '2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv')
str_split('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/', n = Inf, simplify = FALSE)
str_split_fixed('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/', n = Inf, simplify = FALSE)
str_split_fixed('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/', n = Inf)
str_split_fixed('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/', n = Inf)[,str_count('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/')]
str_split_fixed('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/', n = Inf)[,str_count('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/') + 1]
str_split_fixed(file, '_', n = Inf)
file = str_split_fixed('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/', n = Inf)[,str_count('2_DerivedData/test/crp/load/crp_5e-8_load_mrpresso_MRdat.csv', '/') + 1]
file
str_split_fixed(file, '_', n = Inf)
str_split_fixed(file, '_', n = Inf)[,str_count(file, '_') + 1]
str_split_fixed(file, '_', n = Inf)[,2]
x = "2_DerivedData/test/crp/load/crp_5e-6_load_mrpresso_global_wo_outliers.txt"
str_split_fixed(x, '/', n = Inf)[,str_count(x, '/') + 1]
setwd('~/Dropbox/Research/PostDoc-MSSM/2_MR/Shiny/')
MRdat.raw <- read_csv('HarmonizedMRdat.csv', guess_max = 100000)
mrdat <- MRdat.raw  %>% #
  filter(outcome %in% c('aaos')) %>% #
  filter(exposure %in% c('alccliu')) %>% #
  filter(pt == 5e-8)  #
#
res_single <- mr_singlesnp(mrdat,#
                           single_method = 'mr_wald_ratio',#
                           all_method=c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))#
#
res <- mr(mrdat, method_list = c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))
library(TwoSampleMR)
library(ggiraph)#
library(TwoSampleMR)#
library(tidyverse)#
#
mrdat <- MRdat.raw  %>% #
  filter(outcome %in% c('aaos')) %>% #
  filter(exposure %in% c('alccliu')) %>% #
  filter(pt == 5e-8)
res_single <- mr_singlesnp(mrdat,#
                           single_method = 'mr_wald_ratio',#
                           all_method=c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))#
#
res <- mr(mrdat, method_list = c("mr_ivw_fe", "mr_weighted_median", "mr_egger_regression"))
d <- mrdat %>% select(SNP, outcome, exposure, id.exposure, id.outcome, beta.exposure, se.exposure, beta.outcome, se.outcome, mrpresso_keep) %>% #
  mutate(beta.exposure.flipped = ifelse(beta.exposure < 0, beta.exposure * -1, beta.exposure)) %>% #
  mutate(beta.outcome.flipped = ifelse(beta.exposure < 0, beta.outcome * -1, beta.outcome)) #
#
temp <- d %>% unite(id, id.exposure, id.outcome, sep = '.', remove = F) %>% split(.$id) %>% #
  map(~ with(., mr_egger_regression(beta.exposure.flipped, beta.outcome.flipped, se.exposure, se.outcome, #
                                    default_parameters()))) %>% #
  map(~ .$b_i) %>% #
  bind_rows() %>% #
  t() %>% #
  as_tibble(.name_repair = 'unique', rownames = 'id') %>% #
  separate(id, c('id.exposure', 'id.outcome')) %>% #
  mutate(method = "MR Egger") %>% #
  rename(a = '...1')#
#
mrres <- left_join(res, temp) %>% #
  mutate(a = ifelse(is.na(a), 0, a)) #
d$onclick <- sprintf("window.open(\"%s%s\")", "https://www.ncbi.nlm.nih.gov/snp/", as.character(d$SNP)) #
#
g <- ggplot(data = d, aes(x = beta.exposure.flipped, y = beta.outcome.flipped)) + #
  geom_errorbar(aes(ymin = beta.outcome.flipped - se.outcome, ymax = beta.outcome.flipped + se.outcome), colour = "grey", width = 0) + #
  geom_errorbarh(aes(xmin = beta.exposure.flipped - se.exposure, xmax = beta.exposure.flipped + se.exposure), colour = "grey", height = 0) +#
  geom_point_interactive(aes(tooltip = SNP, onclick = onclick, colour = mrpresso_keep)) +#
  geom_abline(data = mrres, aes(intercept = a, slope = b, colour = method), show.legend = TRUE) + #
  theme_bw() + theme(legend.position = "bottom",  text = element_text(family="Times", size=10)) + #
  labs(colour = "MR Test", x = "SNP effect on exposure", y = "SNP effect on outcome") + #
  scale_color_manual(values = c('#E69F00', "#377EB8", "#E41A1C", 'black', "#4DAF4A"))  + guides(size = "legend", colour = "none")#
#
girafe(code = print(g) )
nsnps <- 642#
SignifThreshold <-  0.05/nsnps#
NbDistribution <- (nsnps+1)/SignifThreshold
SignifThreshold
NbDistribution
8256120
nsnps <- 642#
SignifThreshold <-  0.05#
NbDistribution <- (nsnps+1)/SignifThreshold
NbDistribution
nsnps <- 1500#
SignifThreshold <-  0.05#
NbDistribution <- (nsnps+1)/SignifThreshold
NbDistribution
if (nsnps/NbDistribution > s) #
  warning(paste0("Outlier test unstable. The significance threshold of ", #
                 SignifThreshold, " for the outlier test is not achievable with only ", #
                 NbDistribution, " to compute the null distribution. The current precision is <", #
                 nsnps/NbDistribution, ". Increase NbDistribution."))
if (nsnps/NbDistribution > SignifThreshold) #
  warning(paste0("Outlier test unstable. The significance threshold of ", #
                 SignifThreshold, " for the outlier test is not achievable with only ", #
                 NbDistribution, " to compute the null distribution. The current precision is <", #
                 nsnps/NbDistribution, ". Increase NbDistribution."))
warning(paste0("Outlier test unstable. The significance threshold of ", #
                 SignifThreshold, " for the outlier test is not achievable with only ", #
                 NbDistribution, " to compute the null distribution. The current precision is <", #
                 nsnps/NbDistribution, ". Increase NbDistribution."))
nsnps <- 1500#
SignifThreshold <-  0.05#
NbDistribution <- (nsnps+10)/SignifThreshold
warning(paste0("Outlier test unstable. The significance threshold of ", #
                 SignifThreshold, " for the outlier test is not achievable with only ", #
                 NbDistribution, " to compute the null distribution. The current precision is <", #
                 nsnps/NbDistribution, ". Increase NbDistribution."))
nsnps <- 1500#
SignifThreshold <-  0.05#
NbDistribution <- (nsnps+100)/SignifThreshold
warning(paste0("Outlier test unstable. The significance threshold of ", #
                 SignifThreshold, " for the outlier test is not achievable with only ", #
                 NbDistribution, " to compute the null distribution. The current precision is <", #
                 nsnps/NbDistribution, ". Increase NbDistribution."))
nsnps <- 1500#
SignifThreshold <-  0.05#
NbDistribution <- (nsnps+1000)/SignifThreshold
warning(paste0("Outlier test unstable. The significance threshold of ", #
                 SignifThreshold, " for the outlier test is not achievable with only ", #
                 NbDistribution, " to compute the null distribution. The current precision is <", #
                 nsnps/NbDistribution, ". Increase NbDistribution."))
